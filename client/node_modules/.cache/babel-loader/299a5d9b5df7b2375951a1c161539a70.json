{"ast":null,"code":"var _jsxFileName = \"/Users/andrecampbell/Desktop/MaxBone/client/src/components/Quizzes/FashionStyleQuiz/components/Quiz.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Question from './Question';\nimport QuestionCount from './QuestionCount';\nimport AnswerOption from './AnswerOptions'; // import ReactCSSTransitionGroup from 'react-addons-css-transition-group';\n\nfunction Quiz(props) {\n  function renderAnswerOptions(key) {\n    return React.createElement(AnswerOption, {\n      key: key.content,\n      answerContent: key.content,\n      answerType: key.type,\n      answer: props.answer,\n      questionId: props.questionId,\n      onAnswerSelected: props.onAnswerSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    });\n  }\n\n  return (// <ReactCSSTransitionGroup\n    // \tclassName=\"container\"\n    // \tcomponent=\"div\"\n    // \ttransitionName=\"fade\"\n    // \ttransitionEnterTimoeout={800}\n    // \ttransitionLeaveTimeout={500}\n    // \ttransitionAppear\n    // \ttransitionAppearTimeout={500}\n    // >\n    React.createElement(\"div\", {\n      key: props.questionId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(QuestionCount, {\n      counter: props.questionId,\n      total: props.questionTotal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(Question, {\n      content: props.question,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"answerOptions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, props.answerOptions.map(renderAnswerOptions))) // </ReactCSSTransitionGroup>\n\n  ); // return(\n  // \t<div className=\"quiz\">\n  // \t\t<QuestionCount\n  // \t\t\tcounter={props.questionId}\n  // \t\t\ttotal={props.questionTotal}\n  // \t\t/>\n  // \t\t<Question content={props.question} />\n  // \t\t<ul className=\"answerOptions\">\n  // \t\t\t{props.answerOptions.map(renderAnswerOptions)}\n  // \t\t</ul>\n  // \t</div>\n  // );\n}\n\nQuiz.propTypes = {\n  answer: PropTypes.string.isRequired,\n  answerOptions: PropTypes.array.isRequired,\n  counter: PropTypes.number.isRequired,\n  question: PropTypes.string.isRequired,\n  questionId: PropTypes.number.isRequired,\n  questionTotal: PropTypes.number.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n};\nexport default Quiz;","map":{"version":3,"sources":["/Users/andrecampbell/Desktop/MaxBone/client/src/components/Quizzes/FashionStyleQuiz/components/Quiz.js"],"names":["React","PropTypes","Question","QuestionCount","AnswerOption","Quiz","props","renderAnswerOptions","key","content","type","answer","questionId","onAnswerSelected","questionTotal","question","answerOptions","map","propTypes","string","isRequired","array","counter","number","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,YAAP,MAAyB,iBAAzB,C,CACA;;AAGA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAEpB,WAASC,mBAAT,CAA6BC,GAA7B,EAAkC;AACjC,WACC,oBAAC,YAAD;AACC,MAAA,GAAG,EAAEA,GAAG,CAACC,OADV;AAEC,MAAA,aAAa,EAAED,GAAG,CAACC,OAFpB;AAGC,MAAA,UAAU,EAAED,GAAG,CAACE,IAHjB;AAIC,MAAA,MAAM,EAAEJ,KAAK,CAACK,MAJf;AAKC,MAAA,UAAU,EAAEL,KAAK,CAACM,UALnB;AAMC,MAAA,gBAAgB,EAAEN,KAAK,CAACO,gBANzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AAWA;;AAGD,SACC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC;AAAK,MAAA,GAAG,EAAEP,KAAK,CAACM,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AACC,MAAA,OAAO,EAAEN,KAAK,CAACM,UADhB;AAEC,MAAA,KAAK,EAAEN,KAAK,CAACQ,aAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKG,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAER,KAAK,CAACS,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALH,EAMG;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACET,KAAK,CAACU,aAAN,CAAoBC,GAApB,CAAwBV,mBAAxB,CADF,CANH,CAVF,CAqBC;;AArBD,IAjBoB,CA6CpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEDF,IAAI,CAACa,SAAL,GAAiB;AAChBP,EAAAA,MAAM,EAAEV,SAAS,CAACkB,MAAV,CAAiBC,UADT;AAEhBJ,EAAAA,aAAa,EAAEf,SAAS,CAACoB,KAAV,CAAgBD,UAFf;AAGhBE,EAAAA,OAAO,EAAErB,SAAS,CAACsB,MAAV,CAAiBH,UAHV;AAIhBL,EAAAA,QAAQ,EAAEd,SAAS,CAACkB,MAAV,CAAiBC,UAJX;AAKhBR,EAAAA,UAAU,EAAEX,SAAS,CAACsB,MAAV,CAAiBH,UALb;AAMhBN,EAAAA,aAAa,EAAEb,SAAS,CAACsB,MAAV,CAAiBH,UANhB;AAOhBP,EAAAA,gBAAgB,EAAEZ,SAAS,CAACuB,IAAV,CAAeJ;AAPjB,CAAjB;AAaA,eAAef,IAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n \nimport Question from './Question';\nimport QuestionCount from './QuestionCount';\nimport AnswerOption from './AnswerOptions';\n// import ReactCSSTransitionGroup from 'react-addons-css-transition-group';\n \n \nfunction Quiz(props) {\n \n\tfunction renderAnswerOptions(key) {\n\t\treturn (\n\t\t\t<AnswerOption\n\t\t\t\tkey={key.content}\n\t\t\t\tanswerContent={key.content}\n\t\t\t\tanswerType={key.type}\n\t\t\t\tanswer={props.answer}\n\t\t\t\tquestionId={props.questionId}\n\t\t\t\tonAnswerSelected={props.onAnswerSelected}\n\t\t\t/>\n \n\t\t);\n\t}\n \n \n\treturn (\n\t\t// <ReactCSSTransitionGroup\n\t\t// \tclassName=\"container\"\n\t\t// \tcomponent=\"div\"\n\t\t// \ttransitionName=\"fade\"\n\t\t// \ttransitionEnterTimoeout={800}\n\t\t// \ttransitionLeaveTimeout={500}\n\t\t// \ttransitionAppear\n\t\t// \ttransitionAppearTimeout={500}\n\t\t// >\n\t\t\t<div key={props.questionId}>\n\t\t\t \t<QuestionCount\n\t\t\t \t\tcounter={props.questionId}\n\t\t\t \t\ttotal={props.questionTotal}\n\t\t\t  \t/>\n\t\t\t  \t<Question content={props.question} />\n\t\t\t  \t<div className=\"answerOptions\">\n\t\t\t  \t\t{props.answerOptions.map(renderAnswerOptions)}\n\t\t\t  \t</div>\n\t\t\t </div>\n \n\t\t// </ReactCSSTransitionGroup>\n \n \n \n\t);\n \n \n\t// return(\n\t// \t<div className=\"quiz\">\n\t// \t\t<QuestionCount\n\t// \t\t\tcounter={props.questionId}\n\t// \t\t\ttotal={props.questionTotal}\n\t// \t\t/>\n\t// \t\t<Question content={props.question} />\n\t// \t\t<ul className=\"answerOptions\">\n\t// \t\t\t{props.answerOptions.map(renderAnswerOptions)}\n\t// \t\t</ul>\n\t// \t</div>\n\t// );\n}\n \nQuiz.propTypes = {\n\tanswer: PropTypes.string.isRequired,\n\tanswerOptions: PropTypes.array.isRequired,\n\tcounter: PropTypes.number.isRequired,\n\tquestion: PropTypes.string.isRequired,\n\tquestionId: PropTypes.number.isRequired,\n\tquestionTotal: PropTypes.number.isRequired,\n\tonAnswerSelected: PropTypes.func.isRequired\n \n \n \n};\n \nexport default Quiz;"]},"metadata":{},"sourceType":"module"}