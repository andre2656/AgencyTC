{"ast":null,"code":"import _classCallCheck from \"/Users/andrecampbell/Desktop/MaxBone/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/andrecampbell/Desktop/MaxBone/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/andrecampbell/Desktop/MaxBone/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/andrecampbell/Desktop/MaxBone/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/andrecampbell/Desktop/MaxBone/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/andrecampbell/Desktop/MaxBone/client/src/components/StyleApp/Chat/MessagesList.js\";\nimport React from 'react';\nimport $ from 'jquery';\nimport './Chat.css';\n\nvar MessageList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MessageList, _React$Component);\n\n  function MessageList(props) {\n    var _this;\n\n    _classCallCheck(this, MessageList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MessageList).call(this, props)); // Don't call this.setState() here!\n\n    _this.componentDidUpdate = function (prevProps) {\n      if (prevProps.messages.length !== _this.props.messages.length) {\n        _this.setState({\n          messages: _this.props.messages\n        }, function () {\n          _this.renderMessages();\n        });\n      }\n    };\n\n    _this.renderMessages = function () {\n      // text.empty();\n      // emailDiv.empty();\n      // messageDiv.empty();\n      $('#message-list').empty();\n\n      for (var i = 0; i < _this.state.messages.length; i++) {\n        var userMessage = $('<p>');\n        var emailText = $('<p>');\n        var messageDiv = $('<div>'); // console.log(this.state.messages[i]);\n\n        userMessage.text(_this.state.messages[i].message);\n\n        if (!_this.state.messages[i].user) {\n          emailText.text('Your Stylist');\n          userMessage.attr('id', 'stylistText');\n          emailText.attr('id', 'emailStylistText');\n        } else if (_this.state.messages[i].user) {\n          emailText.text(_this.state.messages[i].email);\n          userMessage.attr('id', 'userText');\n          emailText.attr('id', 'emailUserText');\n        }\n\n        messageDiv.addClass('col-md-12');\n        messageDiv.append(userMessage);\n        messageDiv.append(emailText);\n        var messageList = $('#message-list');\n        messageList.append(messageDiv);\n        $(\"#message-list\").scrollTop($(\"#message-list\")[0].scrollHeight);\n      }\n    };\n\n    _this.state = {\n      messages: []\n    };\n    return _this;\n  }\n\n  _createClass(MessageList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.renderMessages();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"message-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return MessageList;\n}(React.Component);\n\nexport default MessageList;","map":{"version":3,"sources":["/Users/andrecampbell/Desktop/MaxBone/client/src/components/StyleApp/Chat/MessagesList.js"],"names":["React","$","MessageList","props","componentDidUpdate","prevProps","messages","length","setState","renderMessages","empty","i","state","userMessage","emailText","messageDiv","text","message","user","attr","email","addClass","append","messageList","scrollTop","scrollHeight","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAO,YAAP;;IAEMC,W;;;;;AAEF,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,qFAAMA,KAAN,GADe,CAEf;;AAFe,UAUvBC,kBAVuB,GAUF,UAACC,SAAD,EAAe;AAChC,UAAIA,SAAS,CAACC,QAAV,CAAmBC,MAAnB,KAA8B,MAAKJ,KAAL,CAAWG,QAAX,CAAoBC,MAAtD,EAA6D;AACzD,cAAKC,QAAL,CAAc;AAAEF,UAAAA,QAAQ,EAAE,MAAKH,KAAL,CAAWG;AAAvB,SAAd,EACI,YAAM;AACF,gBAAKG,cAAL;AACH,SAHL;AAIH;AACJ,KAjBsB;;AAAA,UAoBvBA,cApBuB,GAoBN,YAAM;AAEf;AACA;AACA;AACAR,MAAAA,CAAC,CAAC,eAAD,CAAD,CAAmBS,KAAnB;;AACJ,WAAK,IAAIC,CAAC,GAAE,CAAZ,EAAeA,CAAC,GAAG,MAAKC,KAAL,CAAWN,QAAX,CAAoBC,MAAvC,EAA+CI,CAAC,EAAhD,EAAmD;AAE/C,YAAIE,WAAW,GAAGZ,CAAC,CAAC,KAAD,CAAnB;AACA,YAAIa,SAAS,GAAGb,CAAC,CAAC,KAAD,CAAjB;AACA,YAAIc,UAAU,GAAGd,CAAC,CAAC,OAAD,CAAlB,CAJ+C,CAK/C;;AAGAY,QAAAA,WAAW,CAACG,IAAZ,CAAiB,MAAKJ,KAAL,CAAWN,QAAX,CAAoBK,CAApB,EAAuBM,OAAxC;;AAIA,YAAI,CAAC,MAAKL,KAAL,CAAWN,QAAX,CAAoBK,CAApB,EAAuBO,IAA5B,EAAiC;AAC7BJ,UAAAA,SAAS,CAACE,IAAV,CAAe,cAAf;AACAH,UAAAA,WAAW,CAACM,IAAZ,CAAiB,IAAjB,EAAuB,aAAvB;AACAL,UAAAA,SAAS,CAACK,IAAV,CAAe,IAAf,EAAqB,kBAArB;AACH,SAJD,MAIO,IAAI,MAAKP,KAAL,CAAWN,QAAX,CAAoBK,CAApB,EAAuBO,IAA3B,EAAgC;AACnCJ,UAAAA,SAAS,CAACE,IAAV,CAAe,MAAKJ,KAAL,CAAWN,QAAX,CAAoBK,CAApB,EAAuBS,KAAtC;AACAP,UAAAA,WAAW,CAACM,IAAZ,CAAiB,IAAjB,EAAuB,UAAvB;AACAL,UAAAA,SAAS,CAACK,IAAV,CAAe,IAAf,EAAqB,eAArB;AACH;;AAEDJ,QAAAA,UAAU,CAACM,QAAX,CAAoB,WAApB;AACAN,QAAAA,UAAU,CAACO,MAAX,CAAkBT,WAAlB;AACAE,QAAAA,UAAU,CAACO,MAAX,CAAkBR,SAAlB;AAGA,YAAIS,WAAW,GAAGtB,CAAC,CAAC,eAAD,CAAnB;AACAsB,QAAAA,WAAW,CAACD,MAAZ,CAAmBP,UAAnB;AACAd,QAAAA,CAAC,CAAC,eAAD,CAAD,CAAmBuB,SAAnB,CAA6BvB,CAAC,CAAC,eAAD,CAAD,CAAmB,CAAnB,EAAsBwB,YAAnD;AACH;AACJ,KAzDsB;;AAGf,UAAKb,KAAL,GAAa;AAAEN,MAAAA,QAAQ,EAAE;AAAZ,KAAb;AAHe;AAIlB;;;;wCAEe;AAChB,WAAKG,cAAL;AACH;;;6BAkDY;AACL,aACI;AAAK,QAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH;;;;EAhEqBT,KAAK,CAAC0B,S;;AAkEhC,eAAexB,WAAf","sourcesContent":["import React from 'react';\nimport $ from 'jquery';\nimport './Chat.css';\n\nclass MessageList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        // Don't call this.setState() here!\n        this.state = { messages: [] };\n    }\n\ncomponentDidMount (){\n    this.renderMessages();\n}\n\ncomponentDidUpdate = (prevProps) => {\n    if (prevProps.messages.length !== this.props.messages.length){\n        this.setState({ messages: this.props.messages },\n            () => {\n                this.renderMessages();\n            })  \n    }\n}\n\n\nrenderMessages = () => {\n    \n        // text.empty();\n        // emailDiv.empty();\n        // messageDiv.empty();\n        $('#message-list').empty();\n    for (let i= 0; i < this.state.messages.length; i++){\n       \n        let userMessage = $('<p>');\n        let emailText = $('<p>');\n        let messageDiv = $('<div>');\n        // console.log(this.state.messages[i]);\n        \n        \n        userMessage.text(this.state.messages[i].message);\n\n        \n        \n        if (!this.state.messages[i].user){\n            emailText.text('Your Stylist');\n            userMessage.attr('id', 'stylistText');\n            emailText.attr('id', 'emailStylistText');\n        } else if (this.state.messages[i].user){\n            emailText.text(this.state.messages[i].email);\n            userMessage.attr('id', 'userText');\n            emailText.attr('id', 'emailUserText');\n        }\n       \n        messageDiv.addClass('col-md-12');\n        messageDiv.append(userMessage);\n        messageDiv.append(emailText);\n        \n       \n        let messageList = $('#message-list')\n        messageList.append(messageDiv);\n        $(\"#message-list\").scrollTop($(\"#message-list\")[0].scrollHeight);\n    }\n}\n    render() {\n        return (\n            <div id='message-list' ></div>\n        )\n    }\n}\nexport default MessageList;"]},"metadata":{},"sourceType":"module"}