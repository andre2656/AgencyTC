{"ast":null,"code":"import _classCallCheck from \"/Users/andrecampbell/Desktop/MaxBone/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/andrecampbell/Desktop/MaxBone/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/andrecampbell/Desktop/MaxBone/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/andrecampbell/Desktop/MaxBone/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/andrecampbell/Desktop/MaxBone/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/andrecampbell/Desktop/MaxBone/client/src/components/StylistPage/MessageNav.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport $ from 'jquery';\nimport SendMessageForm from './SendMessageForm';\n\nvar MessageNav =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MessageNav, _React$Component);\n\n  function MessageNav() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MessageNav);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MessageNav)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      email: 'sample@email.com',\n      emails: [],\n      filteredEmails: []\n    };\n\n    _this.getEmails = function () {\n      axios.get('/api/chat/stylist', {}).then(function (response) {\n        _this.setState({\n          emails: response.data\n        }, function () {\n          _this.appendEmails();\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.appendEmails = function () {\n      //     $('.listOFEmail').empty();\n      var emailsArray = [];\n\n      for (var i = 0; i < _this.state.emails.length; i++) {\n        emailsArray.push(_this.state.emails[i].email);\n      }\n\n      function onlyUnique(value, index, self) {\n        return self.indexOf(value) === index;\n      }\n\n      var filteredEmails = emailsArray.filter(onlyUnique);\n\n      _this.setState({\n        filteredEmails: filteredEmails\n      });\n\n      for (var t = 0; t < filteredEmails.length; t++) {\n        var button = $('<button>');\n        button.attr('id', filteredEmails[t]);\n        button.attr('value', filteredEmails[t]);\n        button.append(filteredEmails[t]);\n        button.addClass('btn');\n        button.filter();\n        button.attr('id', 'buttons'); // button.attr(onClick, {this.setEmail})\n\n        $('.listOfEmails').append(button);\n      }\n\n      $('button').click(function (event) {\n        _this.setState({\n          email: event.target.value\n        }, function () {\n          _this.getMessages();\n        });\n      });\n    };\n\n    _this.getMessages = function () {\n      axios.get('/api/chat/receive/', {\n        params: {\n          email: _this.state.email\n        }\n      }).then(function (response) {\n        _this.setState({\n          messages: response.data\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(MessageNav, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getEmails();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"stylistPage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"listOfEmails\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(SendMessageForm, {\n        email: this.state.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return MessageNav;\n}(React.Component);\n\nexport default MessageNav;","map":{"version":3,"sources":["/Users/andrecampbell/Desktop/MaxBone/client/src/components/StylistPage/MessageNav.js"],"names":["React","axios","$","SendMessageForm","MessageNav","state","email","emails","filteredEmails","getEmails","get","then","response","setState","data","appendEmails","catch","error","console","log","emailsArray","i","length","push","onlyUnique","value","index","self","indexOf","filter","t","button","attr","append","addClass","click","event","target","getMessages","params","messages","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport $ from 'jquery';\nimport SendMessageForm from './SendMessageForm';\n\nclass MessageNav extends React.Component {\n    state = {\n        email: 'sample@email.com',\n        emails: [],\n        filteredEmails: [],\n    }\n\n    componentDidMount() {\n        this.getEmails();\n    }\n    getEmails = () => {\n        axios.get('/api/chat/stylist', {\n        }).then((response) => {\n            this.setState({ emails: response.data },\n                () => {\n                    this.appendEmails();\n                });\n\n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n\n    appendEmails = () => {\n        //     $('.listOFEmail').empty();\n        let emailsArray = []\n        for (let i = 0; i < this.state.emails.length; i++) {\n            emailsArray.push(this.state.emails[i].email);\n        }\n\n        function onlyUnique(value, index, self) {\n            return self.indexOf(value) === index;\n        }\n        let filteredEmails = emailsArray.filter(onlyUnique)\n        this.setState({ filteredEmails: filteredEmails })\n\n        for (let t = 0; t < filteredEmails.length; t++) {\n            let button = $('<button>');\n            button.attr('id', filteredEmails[t]);\n            button.attr('value', filteredEmails[t]);\n            button.append(filteredEmails[t]);\n            button.addClass('btn');\n            button.filter();\n            button.attr('id', 'buttons')\n            // button.attr(onClick, {this.setEmail})\n            $('.listOfEmails').append(button)\n        }\n        $('button').click((event) => {\n            this.setState({ email: event.target.value },\n                () => {\n                    this.getMessages()\n                })\n        })\n    }\n    getMessages = () => {\n        axios.get('/api/chat/receive/', {\n            params: {\n                email: this.state.email\n            }\n        }).then((response) => {\n            this.setState({ messages: response.data })\n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n    render() {\n\n        return (\n            <div>\n                <div className='stylistPage'>\n                    <div className='listOfEmails'></div>\n                    <SendMessageForm\n                        email={this.state.email}/>\n                </div>\n            </div>\n\n        )\n    }\n}\nexport default MessageNav;"]},"metadata":{},"sourceType":"module"}